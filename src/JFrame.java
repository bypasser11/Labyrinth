
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JOptionPane;

/**
 *
 * @author Muizzuddin Faiz Bin Mohmad Fauzi
 * Matrikelnr. 1472309
 */
public class JFrame extends javax.swing.JFrame implements PropertyChangeListener {

    protected int mousex, mousey, xopt;
    protected String[] options = {"Weiterspielen","Neu"}; //For showOptionDialog

    /**
     * Creates new form Labyrinth
     */
    public JFrame() {
        super();
        initComponents();
        tabel1.addPropertyChangeListener(this);

        //Default Values for the textboxes
        tfRow.setText("" + tabel1.lab.getRows());
        tfColumn.setText("" + tabel1.lab.getColumns());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jbSearch = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jbNew = new javax.swing.JButton();
        tfRow = new JNumberField();
        tfColumn = new JNumberField();
        tabel1 = new Tafel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        menuEnd = new javax.swing.JMenuItem();
        menuAbout = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Zeilen: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 4);
        jPanel1.add(jLabel1, gridBagConstraints);

        jbSearch.setText("Suchen");
        jbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSearchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 15);
        jPanel1.add(jbSearch, gridBagConstraints);

        jLabel2.setText("Spalten: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 7);
        jPanel1.add(jLabel2, gridBagConstraints);

        jbNew.setText("Neu");
        jbNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNewActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jbNew, gridBagConstraints);

        tfRow.setColumns(5);
        tfRow.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfRowFocusLost(evt);
            }
        });
        tfRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRowActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        jPanel1.add(tfRow, gridBagConstraints);

        tfColumn.setColumns(5);
        tfColumn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfColumnFocusLost(evt);
            }
        });
        tfColumn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfColumnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        jPanel1.add(tfColumn, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        javax.swing.GroupLayout tabel1Layout = new javax.swing.GroupLayout(tabel1);
        tabel1.setLayout(tabel1Layout);
        tabel1Layout.setHorizontalGroup(
            tabel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        tabel1Layout.setVerticalGroup(
            tabel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
        );

        getContentPane().add(tabel1, java.awt.BorderLayout.CENTER);

        jMenu2.setText("Programm");

        menuEnd.setText("Beenden");
        menuEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEndActionPerformed(evt);
            }
        });
        jMenu2.add(menuEnd);

        jMenuBar1.add(jMenu2);

        menuAbout.setText("Info");

        jMenuItem1.setText("Information");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuAbout.add(jMenuItem1);

        jMenuBar1.add(menuAbout);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    protected void labInit() {
        tabel1.lab.init(tabel1.getRow(), tabel1.getColumn());
        tabel1.lab.setStart(0, 0);
        tabel1.lab.setExit(tabel1.lab.getRows() - 1 ,tabel1.lab.getColumns() - 1);
        jbSearch.setEnabled(true);
        tabel1.c = 0;
        tabel1.repaint();
        tabel1.isFinding = false;
        tabel1.isFinished = false;
        tabel1.stop();
    }
    private void jbNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNewActionPerformed
        labInit();
    }//GEN-LAST:event_jbNewActionPerformed

    private void jbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSearchActionPerformed
        
        if (tabel1.isFinding == false) {
            tabel1.start();
            jbSearch.setText("Stop");
            jbNew.setEnabled(false);
            tfColumn.setEnabled(false);
            tfRow.setEnabled(false);
        } else {
            tabel1.stop();
            jbSearch.setText("Suchen");
            jbNew.setEnabled(true);
            tfColumn.setEnabled(true);
            tfRow.setEnabled(true);
//            JOptionPane.showMessageDialog(this,
//                    "Kein Weg gefunden. \n",
//                    "Kein Weg! ",
//                    JOptionPane.PLAIN_MESSAGE);
            xopt = JOptionPane.showOptionDialog(null, 
                    "Spiel war abgebrochen. Weiterspeilen oder neues Labyrinth?",
                    "Bitte ein Auswahl klicken", 
                    JOptionPane.DEFAULT_OPTION, 
                    JOptionPane.INFORMATION_MESSAGE,
                    null,
                    options,
                    options[0]);
            if(xopt == 0){
                jbSearch.setEnabled(true);
            } else {
                labInit();
            }
        }
        
    }//GEN-LAST:event_jbSearchActionPerformed

    private void tfRowFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfRowFocusLost
        if(tfRow.getText().isEmpty()){
            tfRow.setText("" + tabel1.lab.getRows());
        }
        if (Integer.parseInt(tfRow.getText()) < 2 || Integer.parseInt(tfRow.getText()) > 200 ) {
            tfRow.setText("" + tabel1.lab.getRows());
            JOptionPane.showMessageDialog(this,
                    "zulässige Größe: 2x2 -> 200x200",
                    "Row size Error",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            tabel1.setRow(Integer.parseInt(tfRow.getText()));
            labInit();
        }
        
    }//GEN-LAST:event_tfRowFocusLost

    private void tfColumnFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfColumnFocusLost
        if(tfColumn.getText().isEmpty()){
            tfColumn.setText("" + tabel1.lab.getColumns());
        }
        if (Integer.parseInt(tfColumn.getText()) < 2 || Integer.parseInt(tfColumn.getText()) > 200) {
            tfColumn.setText("" + tabel1.lab.getColumns());
            JOptionPane.showMessageDialog(this,
                    "zulässige Größe: 2x2 -> 200x200",
                    "Column size Error",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            tabel1.setColumn(Integer.parseInt(tfColumn.getText()));
            labInit();
        }
       
    }//GEN-LAST:event_tfColumnFocusLost

    private void tfRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRowActionPerformed
        if(tfRow.getText().isEmpty()){
            tfRow.setText("" + tabel1.lab.getRows());
        }
        if (Integer.parseInt(tfRow.getText()) < 2 || Integer.parseInt(tfRow.getText()) > 200) {
            tfRow.setText("" + tabel1.lab.getRows());
            JOptionPane.showMessageDialog(this,
                    "zulässige Größe: 2x2 -> 200x200",
                    "Row size Error",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            tabel1.setRow(Integer.parseInt(tfRow.getText()));
            labInit();
        }
        
    }//GEN-LAST:event_tfRowActionPerformed

    private void tfColumnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfColumnActionPerformed
        if(tfColumn.getText().isEmpty()){
            tfColumn.setText("" + tabel1.lab.getColumns());
        }
        if (Integer.parseInt(tfColumn.getText()) < 2 || Integer.parseInt(tfColumn.getText()) > 200) {
            tfColumn.setText("" + tabel1.lab.getColumns());
            JOptionPane.showMessageDialog(this,
                    "zulässige Größe: 2x2 -> 200x200",
                    "Column size Error",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            tabel1.setColumn(Integer.parseInt(tfColumn.getText()));
            labInit();
        }
        
    }//GEN-LAST:event_tfColumnActionPerformed

    private void menuEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEndActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuEndActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JOptionPane.showMessageDialog(this,
                "Labyrinth program by Prof. Dr. Claus Hentschel-Rapsch\n"
                + "Interface by Muizzuddin Faiz Bin Mohmad Fauzi\n",
                "Project Labyrinth",
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getPropertyName().equals("Stopped")) {
            jbSearch.setText("Suchen");
            jbNew.setEnabled(true);
            tfColumn.setEnabled(true);
            tfRow.setEnabled(true);
        
       }
        if (evt.getPropertyName().equals("Found")) {
            JOptionPane.showMessageDialog(this,
                    "Weg gefunden!",
                    "Erfolgreich!",
                    JOptionPane.PLAIN_MESSAGE);
        }
        if (evt.getPropertyName().equals("NoWay")) {
            JOptionPane.showMessageDialog(this,
                    "Kein Weg gefunden. \n",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            jbSearch.setEnabled(false);
        }
        if (evt.getPropertyName().equals("StackOverflow")) {
            JOptionPane.showMessageDialog(this,
                    "Fehler beim: StackOverflow ",
                    "StackOverflow Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbNew;
    private javax.swing.JButton jbSearch;
    private javax.swing.JMenu menuAbout;
    private javax.swing.JMenuItem menuEnd;
    private Tafel tabel1;
    private JNumberField tfColumn;
    private JNumberField tfRow;
    // End of variables declaration//GEN-END:variables

}
